-- CS2550 Fall 2013
-- Jamen Wood
-- SQL Assignment #6

--1
SELECT x.student_id
FROM enrollment x, section y
WHERE y.section_id = x.section_id
AND y.course_no BETWEEN 100 AND 199
GROUP BY x.student_id
HAVING COUNT(*) = 
(SELECT MAX(num_enrolled)
FROM
(SELECT x.student_id, COUNT(*) AS num_enrolled
FROM section y, enrollment x
WHERE y.section_id = x.section_id
AND y.course_no between 100 AND 199
GROUP BY x.student_id
ORDER BY COUNT(*)));

--2  
SELECT x.student_id, z.last_name, z.first_name
FROM grade x, enrollment y, student z, section zz
WHERE x.student_id = x.student_id
AND x.student_id = z.student_id
AND x.section_id = zz.section_id
AND x.grade_type_code = 'FI'
AND zz.course_no = 230
AND zz.section_id = 100
AND x.numeric_grade = 
(SELECT MAX(maxGrade)
FROM
(SELECT x.numeric_grade AS maxGrade
FROM grade x, enrollment y, student z, section zz
WHERE x.student_id = x.student_id
AND x.student_id = z.student_id
AND x.section_id = zz.section_id
AND x.grade_type_code = 'FI'
AND zz.course_no = 230
AND zz.section_id = 100))
GROUP BY x.student_id, z.first_name, z.last_name;

--3
SELECT salutation, first_name, last_name, zip
FROM instructor
WHERE instructor_id NOT IN
       (SELECT instructor_id
       FROM section)
ORDER BY last_name;

--4
SELECT z.last_name, x.numeric_grade
FROM grade x, enrollment y, student z, section zz
WHERE x.student_id = x.student_id
AND x.student_id = z.student_id
AND x.section_id = zz.section_id
AND x.grade_type_code = 'FI'
AND zz.section_id = 90
AND x.numeric_grade > 
(SELECT AVG(avgGrade)
FROM
(SELECT x.numeric_grade AS avgGrade
FROM grade x, enrollment y, student z, section zz
WHERE x.student_id = x.student_id
AND x.student_id = z.student_id
AND x.section_id = zz.section_id
AND x.grade_type_code = 'FI'
AND zz.section_id = 90))
GROUP BY z.last_name, x.numeric_grade
ORDER BY z.last_name;

--5  ???
SELECT y.course_no, z.description
FROM enrollment x, section y, course z
WHERE y.section_id = x.section_id
AND y.course_no = z.course_no
GROUP BY y.course_no, z.description
HAVING COUNT(*) =
(SELECT MAX(DISTINCT(num_enrolled))
FROM
(SELECT x.student_id, COUNT(*) AS num_enrolled
FROM section y, enrollment x
WHERE x.section_id = y.section_id
GROUP BY x.student_id
ORDER BY COUNT(*)))
ORDER BY y.course_no;

--6 
SELECT y.course_no, z.description
FROM enrollment x, section y, course z
WHERE y.section_id = x.section_id
AND y.course_no = z.course_no
AND TO_CHAR(y.start_date_time, 'HH:MI AM') = '10:30 AM'
GROUP BY y.course_no, z.description
ORDER BY y.course_no;


--7 ??
SELECT z.student_id, z.last_name
FROM grade x, enrollment y, student z, section zz
WHERE x.student_id = x.student_id
AND x.student_id = z.student_id
AND x.section_id = zz.section_id
AND x.grade_type_code = 'QZ'
AND zz.section_id = 135
GROUP BY z.student_id, z.last_name



--8 ??
SELECT first_name, last_name, phone
FROM student
    
    WHERE student_id IN
    (SELECT student_id
    FROM enrollment

    WHERE section_id IN 
    (SELECT section_id
    FROM section
    
    WHERE course_no IN
    (SELECT course_no
    FROM course
     
    WHERE description = 'Systems Analysis')))
    --AND description = 'Project Management')))
    
    ORDER BY last_name;


--9   ???
SELECT x.first_name, x.last_name, y.course_no, z.description
FROM instructor x, section y, course z
WHERE x.instructor_id = y.instructor_id
AND y.course_no = z.course_no
AND z.description LIKE '%Java%'
GROUP BY x.first_name, x.last_name, y.course_no, z.description
HAVING COUNT(*) =
(SELECT MAX(maxJava)
FROM
(SELECT x.instructor_id, COUNT(*) AS maxJava
FROM instructor x, section y, course z
WHERE x.instructor_id = y.instructor_id
AND y.course_no = z.course_no
AND z.description LIKE '%Java%'
ORDER BY x.last_name, x.first_name, y.course_no));



--10 ???
SELECT x.student_id, y.last_name, z.numeric_grade
FROM enrollment x, student y, grade z
WHERE x.student_id = y.student_id 
AND x.student_id = z.student_id
AND x.section_id = 143
AND z.grade_type_code = 'FI'
GROUP BY x.student_id, y.last_name, z.numeric_grade
ORDER BY x.student_id;



