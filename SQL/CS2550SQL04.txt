-- CS2550 Fall 2013
-- Jamen Wood
-- SQL Assignment #4

--1
SELECT ROUND(AVG(cost),2) AS average_cost
FROM course;

--2
SELECT COUNT(registration_date) AS january_registrations
FROM student
WHERE (TO_CHAR(registration_date, 'DD-MON-YYYY') >= TO_DATE('01-JAN-2007' , 'DD-MON-YYYY') 
AND TO_CHAR(registration_date, 'DD-MON-YYYY') <= TO_DATE('31-JAN-2007' , 'DD-MON-YYYY'));

--3
SELECT ROUND(AVG(numeric_grade),1) AS average, MAX(numeric_grade) AS highest, MIN(numeric_grade) AS lowest
FROM grade
WHERE grade_type_code = 'FI'
AND section_id = 151;

--4
SELECT city, state, COUNT(*) AS zipcodes
FROM zipcode
GROUP BY city, state
HAVING COUNT(*) > 3
ORDER BY state, city;

--5
SELECT section_id, COUNT(*) AS enrolled
FROM enrollment
WHERE (TO_CHAR(enroll_date, 'DD-MON-YYYY') = TO_DATE('21-FEB-2007' , 'DD-MON-YYYY'))
GROUP BY section_id
ORDER BY COUNT(*) DESC;

--6 
SELECT student_id, section_id, TO_CHAR(ROUND(AVG(numeric_grade), 4),999.9999) AS average_grade
FROM grade
WHERE section_id = 86
GROUP BY student_id, section_id
ORDER BY student_id;

--7
SELECT student_id, count(section_id) AS sections
FROM enrollment
WHERE student_id = 250
GROUP BY student_id;

--8
SELECT section_id, MIN(numeric_grade) AS low_score
FROM grade
WHERE grade_type_code = 'QZ'
GROUP BY section_id
HAVING MIN(numeric_grade) > 80
ORDER BY section_id;

--9
SELECT employer, COUNT(*) AS employees
FROM student
--WHERE 
GROUP BY employer
HAVING COUNT(*) > 5
ORDER BY COUNT(*);

--10
SELECT section_id, COUNT(numeric_grade) AS participation_grade, MIN(numeric_grade) AS lowest_grade
FROM grade 
WHERE grade_type_code = 'PA'
GROUP BY section_id
HAVING COUNT(numeric_grade) > 15
ORDER BY section_id;

