-- CS2550 Fall 2013
-- Jamen Wood
-- SQL Assignment #9


--1
SELECT x.last_name, x.first_name, 
DECODE(COUNT(y.section_id), 0, ' ', COUNT(y.section_id)) AS sections  
FROM instructor x LEFT OUTER JOIN section y
ON x.instructor_id = y.instructor_id
GROUP BY x.last_name, x.first_name
ORDER BY x.last_name, x.first_name;


--2
SELECT x.course_no
FROM course x, section y, grade_type_weight z, grade zz
WHERE x.course_no = y.course_no
AND y.section_id = z.section_id
AND z.section_id = zz.section_id
AND zz.numeric_grade IS NOT NULL 
GROUP BY x.course_no
HAVING COUNT(DISTINCT(z.grade_type_code)) = 6
ORDER BY x.course_no; 



--3  
SELECT x.zip, COUNT(DISTINCT(z.student_id)) AS students
FROM zipcode x, student y, enrollment z
WHERE x.zip = y.zip
AND y.student_id = z.student_id(+)
AND x.city = 'Flushing'
AND x.state = 'NY'
GROUP BY x.zip
ORDER BY x.zip;


--4
SELECT x.course_no, x.description, 
COUNT(z.student_id) AS students
FROM course x, section y, enrollment z
WHERE x.course_no = y.course_no(+)
AND y.section_id = z.section_id(+)
AND x.description LIKE '%Java%'
GROUP BY x.course_no, x.description
ORDER BY x.course_no;


--5
SELECT x.student_id, x.first_name, x.last_name, x.phone, 
DECODE(COUNT(y.student_id), 0 ,'none', COUNT(y.student_id)) AS students
FROM student x LEFT OUTER JOIN enrollment y
ON x.student_id = y.student_id
WHERE SUBSTR(x.phone, 1, 3) = '617'
GROUP BY x.student_id, x.first_name, x.last_name, x.phone, y.student_id
ORDER BY x.last_name, x.first_name;


--6 ???
SELECT x.course_no, COUNT(DISTINCT(z.grade_type_code)) AS possible_grade_types, 
COUNT(DISTINCT(z.grade_type_code)) AS actual_grade_types
FROM course x, section y, grade_type_weight z, grade zz
WHERE x.course_no = y.course_no
AND y.section_id = z.section_id
AND z.section_id = zz.section_id
AND zz.numeric_grade IS NOT NULL 
GROUP BY x.course_no
HAVING COUNT(DISTINCT(z.grade_type_code)) = 6
ORDER BY x.course_no;  

